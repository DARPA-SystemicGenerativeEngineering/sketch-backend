
generator int line_generator(int x)
{
    return (??-16)*x + (??-16);
}

generator bit predicate_generator(int x)
{
    return {|0|7|8|15|16|23|} <= x && x <= {|0|7|8|15|16|23|};
}

generator int program_generator(int x) {
    return line_generator(x);
}

bit predicate(int x)
{
    return predicate_generator(x);
}

bit condition(int x) {return 0;}

int if_true_branch(int x) {return 0;}

int if_false_branch(int x) {return 0;}

int composite_predicate(int x) {
    if(condition(x)) {
        return if_true_branch(x);
    }
    else {
        return if_false_branch(x);
    }
}

int program_lvl0(int x) {
    return program_generator(x);
}

int dummy_program(int x) {return 1;}

bit dummy_predicate(int x) {return 1;}

@FromFile("zig_zag.data")
harness void sketch_main(int x, int out)
{
    assert(dummy_program(x) == out);
}

@FromFile("zig_zag.data")
bit eval_predicate_main(int x, int out)
{
    return dummy_predicate(x);
}

@FromFile("zig_zag.data")
harness void eval_predicate_main_harness(int x, int out)
{
    assert(eval_predicate_main(x, out) == 1);
}

@FromFile("zig_zag.data")
harness void dummy_main(int x, bit out)
{
    assert(eval_predicate_main(x, out));
    assert(dummy_program(x) == 0);
    assert(predicate(x) == 0);
    assert(program_lvl0(x) == out);
    assert(composite_predicate(x) == out);
}