dropThird() push 3 pop 3{
	push(pop());
	push(pop());
	pop();
}

dropThird()push 3*WS pop 2*WS{
	while(*){
		push(pop());
		push(pop());
		pop();
	}
}

bit[*] logShift(input[*]){
	i = 1;
	tmp = input;
	while(*){
		tmp = (tmp << i) o (tmp);
		i = i*2;
	}
	return tmp;
}

bit [2*WS] dropThird(input[3*WS]){
	tmp1(1:WS);
	tmp2(1:WS);
	tmp3(1:WS);
	[tmp1, tmp2, tmp3] = input;

	tmp1p = logShift(tmp1); 
	tmp2p = logShift(tmp2); 
	tmp3p = logShift(tmp3);
	
	tmp1q(1:2*WS) = tmp1p;
	tmp2q(1:2*WS) = tmp2p;
	tmp3q(1:2*WS) = tmp3p;
	output = tmp1q o tmp2q>>* o tmp3q>>*;
	
	output = [tmp1p(*:*), tmp2p(*:*), tmp3p(*:*)];
	return output;
}
